openapi: 3.0.0
info:
  title: Intermediate Programming APIs
  description: "APIs used by studentsin the CSC 211: intermediate programming."
  version: 1.0.0
servers:
  - url: https://su5r8ko64h.execute-api.us-east-1.amazonaws.com
    description: Main production server
paths:
  /api/helloworld:
    get:
      summary: Returns "Hello World"
      responses:
        '200':
          description: Returns "Hello World"
          content:
            text/plain:
              schema:
                type: string
                example: "Hello World"
  /api/meaning-of-life:
    get:
      summary: Returns the meaning of life
      response:
      '200':
        description: Returns the meaning of life
        content:
          text/plain:
            schema:
              type: string
  /api/jokes:
    post:
      tags:
        - Jokes
      summery: Adds a joke to the list of jokes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                joke:
                  type: string
              required:
                - joke
      responses:
        '201':
          description: Successfully appends the joke you submitted to the end of the list of jokes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Joke'
        '422':
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Missing body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/jokes/random:
    get:
      tags:
        - Jokes
      summary: Returns a random joke
      responses:
        '200':
          description: Returns a random joke
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Joke'
  /api/jokes/{id}:
    get:
      tags:
        - Jokes
      summary: Returns joke by id
      parameters:
        - name: id
          in: path
          required: true
          description: id of the joke
          schema:
            type: number
      responses:
        '200':
          description: Returns a joke by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Joke'
        '404':
          description: Joke id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Joke:
      type: object
      properties:
        id:
          type: number
          example: 7
        joke:
          type: string
          example: Why do programmers always mix up Christmas and Halloween? Because Oct 31 == Dec 25.
    Error:
      type: object
      properties:
        error:
          type: string
